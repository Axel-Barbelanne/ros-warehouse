services:
    simulation:
        build: ./docker/simulation
        container_name: simulation
        runtime: nvidia
        privileged: true
        network_mode: "host"
        environment:
            - ROS_DOMAIN_ID=1
            - DISPLAY=${DISPLAY}
            - QT_X11_NO_MITSHM=1
            - GAZEBO_AUDIO=0
        stdin_open: true
        # command: ["bash", "-c", "source /ros_ws/install/setup.bash && ros2 launch warehouse_simulation_pkg simulation.launch.py"]
        volumes:
            - maps:/data/maps
            - ./src/warehouse_simulation_pkg:/ros_ws/src/warehouse_simulation_pkg
            - ./src/husky/husky_description:/ros_ws/src/husky_description
            - ./src/husky/husky_gazebo:/ros_ws/src/husky_gazebo
            - ./src/turtlebot4/turtlebot4_description:/ros_ws/src/turtlebot4_description
            - ./src/turtlebot4/turtlebot4_gazebo:/ros_ws/src/turtlebot4_simulator
            - /tmp/.X11-unix:/tmp/.X11-unix
        deploy:
            resources:
                reservations:
                    devices:
                        - capabilities: [gpu]  # NVIDIA GPU passthrough
        devices:
            - /dev/dri  # Intel/AMD GPU passthrough

    task_manager:
        build: ./docker/task_manager
        container_name: task_manager
        network_mode: "host"
        environment:
            - ROS_DOMAIN_ID=1
            - DISPLAY=${DISPLAY}
        stdin_open: true
        # command: ["bash", "-c", "source /ros_ws/install/setup.bash && ros2 launch warehouse_simulation_pkg task_manager.launch.py"]
        volumes:
            - maps:/data/maps
            - ./src/warehouse_mission_control_pkg:/ros_ws/src/warehouse_mission_control_pkg
            - /tmp/.X11-unix:/tmp/.X11-unix
        
    delivery_bot:
        build: ./docker/delivery_bot
        container_name: delivery_bot
        network_mode: "host"
        environment:
            - ROS_DOMAIN_ID=1
            - DISPLAY=${DISPLAY}
        stdin_open: true
        # command: ["bash", "-c", "source /ros_ws/install/setup.bash && ros2 launch warehouse_simulation_pkg delivery_bot.launch.py"]
        volumes:
            - maps:/data/maps
            - ./src/delivery_bot_nav_pkg:/ros_ws/src/delivery_bot_nav_pkg
            - ./src/husky/husky_control:/ros_ws/src/husky_control
            - ./src/husky/husky_description:/ros_ws/src/husky_description
            - ./src/husky/husky_gazebo:/ros_ws/src/husky_gazebo
            - ./src/husky/husky_msgs:/ros_ws/src/husky_msgs
            - ./src/husky/husky_viz:/ros_ws/src/husky_viz
            - /tmp/.X11-unix:/tmp/.X11-unix
    
    picker_bot:
        build: ./docker/picker_bot
        container_name: picker_bot
        network_mode: "host"
        environment:
            - ROS_DOMAIN_ID=1
            - DISPLAY=${DISPLAY}
        stdin_open: true
        # command: ["bash", "-c", "source /ros_ws/install/setup.bash && ros2 launch warehouse_simulation_pkg picker_bot.launch.py"]
        volumes:
            - maps:/data/maps
            - ./src/picker_bot_nav_pkg:/ros_ws/src/picker_bot_nav_pkg
            - /tmp/.X11-unix:/tmp/.X11-unix
    
volumes:
  maps: